/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode rotateRight(ListNode head, int k) {
        if (k == 0){
            return head;
        }
        if(head == null || head.next == null){
            return head;
        }
        int count = 0;
        ListNode i = head;
        while(i != null){
            count++;
            i=i.next;
            
        }
        int actual = k % count;
        while (actual > 0){
            ListNode curr  = head;
            while(curr.next.next != null){
                curr = curr.next;
            }
            ListNode temp = new ListNode(curr.next.val, head);
            head = temp;
            curr.next = null;
            actual--;

        
    }
    return head;
    }


}
